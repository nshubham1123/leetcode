/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isCousins(TreeNode* root, int x, int y) {
        if(root==NULL)
            return false;
        int v1,d1=0,v2,d2=0;
        find(root,x,v1,d1,0);
        find(root,y,v2,d2,0);
        if(d1==d2 && v1!=v2)
            return true;
        return false;
        
    }
    void find(TreeNode* root,int x,int &v,int &d,int depth)
    {
        if(root->left!=NULL )
        {
            if(root->left->val==x)
            {
                d=depth+1;
                v=root->val;
                return;
            }
            find(root->left,x,v,d,depth+1);
        }
        if(root->right!=NULL )
        {
            if(root->right->val==x)
            {
                d=depth+1;
                v=root->val;
                return;
            }
            find(root->right,x,v,d,depth+1);
        } 
        return;
    }
};
